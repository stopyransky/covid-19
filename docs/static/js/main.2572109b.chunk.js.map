{"version":3,"sources":["utils.js","vis.js","App.js","serviceWorker.js","index.js"],"names":["data","svgSelection","screen","main","xScale","yScale","yDomain","lineGen","prepData","caseType","raw","allData","confirmed","locations","filter","d","country_code","countryDocs","map","docs","forEach","arr","key","history","doc","country","length","values","aggregated","v","Object","keys","k","i","concatenateHistory","h","date","Date","sort","a","b","getTime","historyArray","push","mergeByCountry","group","c","extractHistory","countries","Array","from","Set","dispatcher","d3","format","xDomain","selected","prototype","moveToFront","this","each","parentNode","appendChild","style","fontFamily","strokeColor","strokeWidth","strokeColorSelected","strokeWidthSelected","strokeWidthHover","strokeColorHover","textColor","tickTextColor","tickLineColor","lineStrokeStyle","tickLineStyle","tickTextSize","strokeWidthInteractive","markerSize","selectedMarkerSize","circleStrokeWidth","getPathStroke","isDeselected","latest","s","handleCountrySelect","selectedCountry","prev","find","next","color","attr","lastValue","text","vis","init","svg","_data","w","margin","top","bottom","left","right","THRESHOLD","width","height","append","range","domain","curve","x","y","xAxis","ticks","rest","pop","tickPadding","tickValues","tickFormat","xAxisSel","call","selectAll","select","yAxis","yAxiSel","remove","drawAxes","enter","on","n","sel","handleCaseType","defineProperty","get","defaultState","reducer","state","action","type","value","App","svgRef","useRef","useReducer","dispatch","setState","useEffect","Utils","current","onResize","window","location","reload","addEventListener","removeEventListener","innerWidth","document","body","overflowY","display","justifyContent","position","maxWidth","className","fontWeight","fontSize","onChange","e","target","zIndex","noreferer","noopener","href","ref","Math","min","innerHeight","id","result","floodColor","floodOpacity","in","in2","operator","radius","stdDeviation","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2572109b.chunk.js","sourcesContent":["\nimport { group } from 'd3-array';\nimport * as data from './data.json';\nimport * as allData from './data.all.json';\n\n\nfunction prepData(caseType) {\n  // let raw = data.default.locations\n  let raw = allData.default.confirmed.locations\n    .filter(d => d.country_code !== 'XX');\n\n  const byCountryCodeMap = group(raw, d => d.country);\n\n  const countryDocs = mergeByCountry(byCountryCodeMap)\n  const docs = extractHistory(countryDocs)\n  const countries = Array.from(new Set(docs.map(d => d.country)))\n  return {\n    docs,\n    countryDocs,\n    countries,\n  };\n}\n\nfunction extractHistory(countryDocs) {\n  const docs = []\n  countryDocs.forEach(c => {\n\n    const { history, country, country_code } = c;\n\n    Object.keys(history).forEach(k => {\n      const doc = { country, country_code, date: k, confirmed: history[k]}\n\n      docs.push(doc)\n    });\n\n  });\n\n  return docs;\n}\n\nfunction mergeByCountry(map) {\n  const docs = [];\n\n  map.forEach((arr, key) => {\n\n    const { history, country, country_code } = arr[0];\n    const doc = { country, country_code };\n    if(arr.length > 1) {\n\n      doc.history = concatenateHistory(arr)\n\n    } else {\n\n      doc.history = history;\n    }\n\n\n    let h = Object.keys(doc.history)\n      // .filter(k => doc.history[k] !== 0)\n      .map(k => ({ key: k, date: new Date(k), confirmed: doc.history[k]}))\n      .sort((a, b) => a.date.getTime() - b.date.getTime());\n\n\n    doc.historyArray = h;\n    docs.push(doc);\n  });\n\n  return docs;\n}\n\nfunction concatenateHistory(values) {\n  const aggregated = {}\n  values.forEach(v => {\n    const history = v.history; // obj\n    Object.keys(history).forEach((k, i) => {\n      if(typeof aggregated[k] === 'undefined') {\n        aggregated[k] = history[k];\n      } else {\n        aggregated[k] += history[k]\n      }\n    })\n  });\n\n  return aggregated;\n}\n\n\nexport default {\n  prepData\n}\n","import * as d3 from 'd3';\nimport { THRESHOLD } from './App';\n\nconst dispatcher = d3.dispatch('datapointClick')\nconst format = d3.timeFormat('%d %b');\n\nconst xDomain = [ new Date('2020-01-22'), new Date('2020-03-18')]\n\nlet selected = '';\n\nlet data;\nlet svgSelection, screen;\nlet main, xScale, yScale, yDomain, lineGen;\n\nd3.selection.prototype.moveToFront = function() {\n  return this.each(function() { this.parentNode.appendChild(this); });\n};\n\nconst style = {\n  fontFamily: 'Playfair Display',\n  strokeColor: '#FFC042',\n  strokeWidth: 1,\n  strokeColorSelected: 'white',\n  strokeWidthSelected: 5,\n  strokeWidthHover: 2,\n  strokeColorHover: 'white',\n  textColor: 'white',\n  tickTextColor: '#aaa',\n  tickLineColor: '#aaa',\n  lineStrokeStyle: \"1, 1\",\n  tickLineStyle: '0.5, 5',\n  tickTextSize: '1.0rem',\n  strokeWidthInteractive: 4,\n  markerSize: 2,\n  selectedMarkerSize: 6,\n  circleStrokeWidth: 0,\n}\n\nfunction init(svg, _data) {\n\n  data = _data;\n\n  svgSelection = d3.select(svg);\n  const w = svgSelection.attr('width');\n  const h = svgSelection.attr('height');\n\n\n  const margin = {\n    top: 50,\n    bottom: 50,\n    left: 30,\n    right: w < THRESHOLD ? 30: 150,\n  }\n  screen = {\n    w, h,\n    width: w - margin.left - margin.right,\n    height: h - margin.top - margin.bottom,\n    margin\n  }\n\n  main = svgSelection.append('g')\n    .attr('class', 'main')\n    .attr('transform', `translate(20, 0)`);\n\n  xScale = d3.scaleTime()\n    .range([screen.margin.left, screen.width])\n    .domain(xDomain);\n\n  const confirmed = data.docs.map(d => d.confirmed);\n\n  yDomain = d3.extent(confirmed);\n\n  yScale = d3.scaleSymlog()\n    .range([screen.height+screen.margin.top, screen.margin.top])\n    .domain(yDomain)\n\n  lineGen = d3.line()\n    .curve(d3.curveMonotoneX)\n    .x(d => xScale(new Date(d.date)))\n    .y(d => yScale(+d.confirmed))\n\n  drawAxes()\n  drawCircleMarkers();\n  drawPaths()\n  drawInteractionPaths();\n\n  main.append('g')\n  .append('text')\n  .attr('class', 'label')\n  .style('font-family', style.fontFamily)\n  // .attr('font-weight', 'bold')\n  .attr('display', 'none')\n  .attr('text-anchor', w < THRESHOLD ? 'end' : 'start')\n  .attr('font-size', '16px')\n  .attr('x', w < THRESHOLD ? screen.width - 8 : screen.width + 8)\n  .attr('fill', style.textColor)\n  .style('z-index', 100)\n}\n\nfunction drawAxes() {\n  const xAxis = d3.axisBottom(xScale);\n\n  const [ _, ...rest] = xScale.ticks();\n  rest.pop();\n  xAxis\n    .tickPadding(8)\n    .tickValues(screen.w < THRESHOLD ? xDomain : [...rest, ...xDomain]).tickFormat(format)\n  const xAxisSel = main.append('g')\n    .attr('class', 'x-axis')\n    .attr('transform', `translate(0, ${screen.height + screen.margin.top})`)\n    .call(xAxis);\n\n  xAxisSel.selectAll('.tick').select('text')\n    .attr('fill', style.tickTextColor)\n    .style('font-size', style.tickTextSize)\n    .style('font-family', style.fontFamily);\n\n  xAxisSel.selectAll('.tick')\n    .select('line')\n    .attr('stroke', style.tickLineColor);\n\n\n  if(screen.w >= THRESHOLD) {\n    const yAxis = d3.axisRight(yScale).tickValues([ 5, 50, 500, 5000, 50000 ])\n\n    const yAxiSel = main.append('g')\n      .attr('class', 'y-axis')\n      .attr('transform', `translate(${screen.width}, 0)`)\n      .call(yAxis)\n\n    yAxiSel.selectAll('.tick')\n      .select('text')\n      .attr('fill', style.tickTextColor)\n      .style('font-size', style.tickTextSize)\n      .attr('dy', 2)\n      .style('font-family', style.fontFamily);\n    yAxiSel.selectAll('.tick')\n      .select('line')\n      .attr('x1', 0)\n      .attr('x2', -screen.width + screen.margin.left)\n      .attr('stroke-dasharray', style.tickLineStyle)\n      .attr('stroke', style.tickLineColor);\n  }\n    d3.selectAll('.domain').remove();\n\n}\n\nfunction drawCircleMarkers() {\n\n  main\n  .selectAll('circle')\n  .data(data.countryDocs, d => d.country_code)\n  .enter()\n  .append('circle')\n    .attr('class', d => `${d.country_code}` )\n    .attr('cx', d => xScale(d.historyArray[d.historyArray.length-1].date))\n    .attr('cy', d => yScale(d.historyArray[d.historyArray.length-1].confirmed))\n    .attr('r', style.markerSize)\n    .attr('fill', d => getPathStroke(d))\n    .attr('stroke', style.strokeColor)\n    .attr('stroke-width', style.circleStrokeWidth)\n    .style('pointer-events', 'none')\n}\n\nfunction getPathStroke(d, isDeselected) {\n  if(!isDeselected && selected === d.country) {\n    return style.strokeColorSelected;\n  }\n  const latest = d.historyArray[d.historyArray.length-1].confirmed;\n\n  const s = yScale(latest)/yScale(yDomain[0]);\n  const col = d3.hsl(0, 0.5 + s * 0.2 , 0.5);\n  return col;\n\n}\nfunction drawPaths() {\n  main\n  .selectAll('path')\n  .data(data.countryDocs, d => d.country_code)\n  .enter()\n  .append('path')\n    .attr('class', d => d.country_code )\n    .attr('d', d => lineGen(d.historyArray))\n    .attr('fill', 'none')\n    .attr('stroke', d => getPathStroke(d))\n    .style(\"stroke-linecap\", \"round\")\n    .attr('stroke-width', style.strokeWidth)\n    .style('pointer-events', 'none')\n}\n\nfunction drawInteractionPaths() {\n  const g = main.append('g').attr('class', 'interactive')\n\n  g.selectAll('path')\n  .data(data.countryDocs, d => d.country_code)\n  .enter()\n  .append('path')\n    .attr('class', d => d.country_code + '_')\n    .attr('d', d => lineGen(d.historyArray))\n    .attr('fill', 'none')\n    .attr('stroke', 'transparent')\n    .attr('stroke-width', style.strokeWidthInteractive)\n    .on('mouseover', (d, i, n) => {\n      const lastValue = d.historyArray[d.historyArray.length-1].confirmed;\n\n      if(selected !== d.country) {\n        d3.selectAll(`path.${d.country_code}`)\n          .attr('stroke', style.strokeColorHover)\n          .attr('stroke-width', style.strokeWidthHover)\n          .moveToFront()\n        d3.select(`circle.${d.country_code}`)\n          .attr('stroke', style.strokeColorHover)\n          .attr('fill', style.strokeColorHover)\n          .attr('stroke-width', style.strokeWidthHover)\n          .moveToFront()\n      }\n\n\n        d3.select('.label')\n        .attr('display', null)\n        .attr('y', yScale(lastValue) - 6)\n        .text(`${d.country}, ${lastValue}`)\n        .moveToFront()\n\n\n\n    })\n    .on('mouseout', (d, i, n) => {\n      if(selected !== d.country) {\n        const strokeColor = getPathStroke(d);\n        d3.select(`path.${d.country_code}`)\n          .attr('stroke', strokeColor)\n          .attr('stroke-width', style.strokeWidth)\n\n        d3.select(`circle.${d.country_code}`)\n          .attr('stroke', strokeColor)\n          .attr('stroke-width', style.strokeWidth)\n          .attr('fill', strokeColor)\n\n\n        d3.select('.label').attr('display', 'none')\n      }\n      const sel = data.countryDocs.find((d) => d.country === selected )\n      sel && d3.select(`.${sel.country_code}`).moveToFront()\n\n      d3.select('.label').moveToFront()\n    })\n    .on('mouseup', (d, i, n) => {\n\n      handleCountrySelect(d.country_code);\n\n      dispatcher.call('datapointClick', null, d.country);\n    })\n}\n\nfunction handleCountrySelect(selectedCountry) {\n  const prev = data.countryDocs.find((d) => d.country === selected )\n  const next = data.countryDocs.find((d) => d.country === selectedCountry )\n\n  if(prev) {\n    const color = getPathStroke(prev, true);\n    d3.select(`path.${prev.country_code}`)\n    .attr('stroke', color)\n    .attr('filter', null)\n    .attr('stroke-width', style.strokeWidth)\n    d3.select(`circle.${prev.country_code}`)\n      .attr('r', style.markerSize)\n      .attr('stroke', color)\n      .attr('stroke-width', style.strokeWidth)\n      .attr('fill', color )\n      .attr('filter', null)\n  }\n\n  if(next) {\n    const lastValue = next.historyArray[next.historyArray.length-1].confirmed\n    d3.select(`path.${next.country_code}`)\n    .attr('stroke', style.strokeColorSelected)\n    .attr('stroke-width', style.strokeWidthSelected)\n\n    d3.select(`circle.${next.country_code}`)\n      .attr('r', style.selectedMarkerSize)\n      .attr('fill', style.strokeColorSelected)\n      .attr('stroke', style.strokeColorSelected)\n\n    d3.selectAll(`.${next.country_code}`)\n      .attr('filter', 'url(#white-glow)')\n      .moveToFront();\n\n    d3.select('.label')\n      .attr('display', null)\n      .attr('y', yScale(lastValue) - 6)\n      .text(`${next.country}, ${lastValue}`).moveToFront()\n  }\n\n  selected = selectedCountry;\n}\n\nfunction handleCaseType(caseType) {\n\n}\n\nconst vis = {\n  init,\n  // resize,\n  handleCountrySelect,\n  handleCaseType,\n  style,\n  dispatcher\n}\n\nObject.defineProperty(vis, 'screen', {\n  get: function() {\n    return screen;\n  }\n});\n\nexport default vis;\n\n","import React, { useEffect, useRef, useReducer } from 'react';\nimport './App.css';\nimport Utils from './utils';\nimport vis from './vis';\n\nexport const THRESHOLD = 1200;\n\nfunction Radio ({ type, value, onChange, isChecked }) {\n  return (\n    <div style={{ color: 'white', marginRight: '8px' }}>\n      <input\n        type=\"radio\"\n        id={value}\n        name={type}\n        value={value}\n        checked={isChecked}\n        onChange={e => onChange(e.target.value)}\n      />\n      <label\n        className={'display'}\n        style={{ marginLeft: '4px', color: isChecked ? vis.style.strokeColor: 'white' }}\n        htmlFor={value}>{value}</label>\n    </div>\n  )\n}\n\nfunction DatasetSelection({ onChange, selected })  {\n  return (\n    <div style={{ display: 'flex' }}>\n      <Radio type=\"caseType\" value=\"confirmed\" isChecked={selected === 'confirmed'} onChange={onChange}/>\n      <Radio type=\"caseType\" value=\"deaths\" isChecked={selected === 'deaths'} onChange={onChange}/>\n      <Radio type=\"caseType\" value=\"recovered\" isChecked={selected === 'recovered'} onChange={onChange} />\n    </div>\n  )\n}\n\nconst defaultState = { countries: [], selectedCountry: '', caseType: 'confirmed' }\n\nfunction reducer(state, action) {\n  switch(action.type) {\n    case 'countries': return { ...state, countries: action.value };\n    case 'selectedCountry' : {\n      return { ...state, selectedCountry: action.value};\n    }\n    case 'caseType': {\n      return { ...state, caseType: action.value }\n    }\n    default: return state;\n  }\n}\n\nfunction App() {\n  const svgRef = useRef(null);\n  const [ state, dispatch ] = useReducer(reducer, defaultState);\n  const setState = (type, value) => dispatch({ type, value });\n\n  useEffect(() => {\n      let data = Utils.prepData();\n      vis.init(svgRef.current, data);\n      setState('countries', data.countries)\n      vis.dispatcher.on('datapointClick', (country) => {\n        setState('selectedCountry', country)\n      });\n  }, []);\n\n  useEffect(() => {\n    function onResize() {\n      window.location.reload()\n    }\n\n    window.addEventListener('resize', onResize)\n    return () => {\n      window.removeEventListener(onResize)\n    }\n  }, []);\n\n  useEffect(() => {\n    state.selectedCountry && vis.handleCountrySelect(state.selectedCountry)\n  }, [ state.selectedCountry ]);\n\n  useEffect(() => {\n    vis.handleCaseType(state.caseType)\n  }, [state.caseType])\n  const w = window.innerWidth;\n  if(w < THRESHOLD) {\n    document.body.style.overflowY = 'auto';\n  }\n  return (\n    <div  style= {{\n       display: 'flex',\n      justifyContent: 'center',\n\n    }}>\n      <div style={{\n        position: 'relative',\n        maxWidth: 1400,\n\n      }}>\n      <div style={{\n        position: w < THRESHOLD ? 'relative' : 'absolute',\n        left: w < THRESHOLD ? null : '170px',\n        top: w < THRESHOLD ? null : '240px',\n        margin: w < THRESHOLD ? '10px': null,\n      }}>\n        <h1 className={'display'} style={{\n          fontWeight: 900,\n          color: 'white',\n          margin: 0,\n          fontSize: '48px'\n        }}>Flattening the curve.</h1>\n        <h3 className={'display'} style={{\n          fontWeight: 700,\n          margin: '10px 0px',\n          color: vis.style.strokeColor\n        }}>Coronavirus cases per country over time.</h3>\n        {/* <DatasetSelection selected={state.caseType} onChange={v => setState('caseType', v)}/> */}\n        <h3 className={'display'} style={{\n          fontWeight: 700,\n          fontSize: '12px',\n          margin: '10px 0px',\n          color: vis.style.strokeColor\n        }}>Select below or hover over a line to see details.</h3>\n      <select\n        style={{ color: w < THRESHOLD ? 'white': 'black', width: '200px', margin: '5px 0px'}}\n        value={state.selectedCountry} onChange={e => {\n          setState('selectedCountry', e.target.value)\n        }}>\n        <option key={-1} value={''}>Select Country</option>\n        {state.countries.map(c => (<option value={c} key={c}>{c}</option>))}\n      </select>\n      <div style={{display: 'flex'}}>\n        <p className={'display'} style={{ zIndex: 999, margin: '5px 5px 0px 0px', color: vis.style.strokeColor, fontSize: '12px' }}>\n        <a style={{\n            color: '#aaa',\n          }} noreferer='true' noopener='true' target='blank' href='https://github.com/Omaroid/Covid-19-API'>data source</a>\n\n          </p>\n        <p className={'display'} style={{ zIndex: 999,  margin: '5px 0px 0px 5px', color: vis.style.strokeColor, fontSize: '12px' }}>\n          <a style={{\n            color: '#aaa',\n          }} noreferer='true' noopener='true' target='blank' href='https://twitter.com/stopyransky'>author</a>\n\n        </p>\n      </div>\n      </div>\n      <svg\n        ref={svgRef}\n        width={Math.min(THRESHOLD, window.innerWidth)}\n        height={window.innerHeight - 10}>\n        <filter id=\"white-glow\" x=\"-5000%\" y=\"-5000%\" width=\"10000%\" height=\"10000%\">\n          <feFlood result=\"flood\" floodColor=\"#ffffff\" floodOpacity=\"1\"></feFlood>\n          <feComposite in=\"flood\" result=\"mask\" in2=\"SourceGraphic\" operator=\"in\"></feComposite>\n          <feMorphology in=\"mask\" result=\"dilated\" operator=\"dilate\" radius=\"1.0\"></feMorphology>\n          <feGaussianBlur in=\"dilated\" result=\"blurred\" stdDeviation=\"5\"></feGaussianBlur>\n          <feMerge>\n              <feMergeNode in=\"blurred\"></feMergeNode>\n              <feMergeNode in=\"SourceGraphic\"></feMergeNode>\n          </feMerge>\n        </filter>\n      </svg>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
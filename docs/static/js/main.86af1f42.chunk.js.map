{"version":3,"sources":["utils.js","vis.js","App.js","serviceWorker.js","index.js"],"names":["data","caseType","svgSelection","screen","main","xScale","yScale","yDomain","lineGen","xAxisSel","yAxisSel","circleMarkers","paths","interactivePaths","label","prepData","raw","allData","locations","filter","d","country_code","countryDocs","map","docs","forEach","arr","key","history","doc","country","length","values","aggregated","v","Object","keys","k","i","concatenateHistory","historyArray","date","Date","confirmed","sort","a","b","getTime","push","mergeByCountry","group","c","extractHistory","countries","Array","from","Set","dispatcher","d3","format","xDomain","selected","t","duration","ease","prototype","moveToFront","this","each","parentNode","appendChild","ticks","deaths","recovered","style","fontFamily","strokeColor","strokeWidth","strokeColorSelected","strokeWidthSelected","strokeWidthHover","strokeColorHover","textColor","tickTextColor","tickLineColor","lineStrokeStyle","tickLineStyle","tickTextSize","strokeWidthInteractive","markerSize","selectedMarkerSize","circleStrokeWidth","getPathColor","isDeselected","latest","s","h","l","handleCountrySelect","selectedCountry","prev","find","next","color","attr","lastValue","text","vis","init","svg","_data","_caseType","w","margin","top","bottom","left","right","THRESHOLD","width","height","append","range","domain","curve","x","y","makeScales","call","tickPadding","tickValues","rest","pop","getXTicks","tickFormat","getXAxis","selectAll","select","transition","remove","makeAxes","enter","g","on","n","sel","makeInteractionPaths","handleCaseType","exit","enterSelection","merge","updatePaths","updateInteractivePaths","circleEnterSelection","updateCircleMarkers","defineProperty","get","Radio","type","value","onChange","isChecked","marginRight","id","name","checked","e","target","className","marginLeft","htmlFor","DatasetSelection","display","defaultState","reducer","state","action","App","svgRef","useRef","useReducer","dispatch","setState","useEffect","useCallback","Utils","current","onResize","window","location","reload","addEventListener","removeEventListener","updateData","innerWidth","document","body","overflowY","justifyContent","position","maxWidth","fontWeight","fontSize","zIndex","noreferer","noopener","href","ref","Math","min","innerHeight","result","floodColor","floodOpacity","in","in2","operator","radius","stdDeviation","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.86af1f42.chunk.js","sourcesContent":["import { group } from 'd3-array';\nimport * as allData from './data.all.json';\n\nfunction prepData(caseType) {\n\n  let raw = allData.default[caseType].locations\n    .filter(d => d.country_code !== 'XX');\n\n  const byCountryCodeMap = group(raw, d => d.country);\n  const countryDocs = mergeByCountry(byCountryCodeMap);\n  const docs = extractHistory(countryDocs);\n  const countries = Array.from(new Set(docs.map(d => d.country)));\n\n  return {\n    docs,\n    countryDocs,\n    countries,\n  };\n}\n\nfunction extractHistory(countryDocs) {\n  const docs = []\n  countryDocs.forEach(c => {\n\n    const { history, country, country_code } = c;\n\n    Object.keys(history).forEach(k => {\n      const doc = { country, country_code, date: k, confirmed: history[k]}\n      docs.push(doc)\n    });\n\n  });\n\n  return docs;\n}\n\nfunction mergeByCountry(map) {\n  const docs = [];\n\n  map.forEach((arr, key) => {\n\n    const { history, country, country_code } = arr[0];\n    const doc = { country, country_code };\n\n    if(arr.length > 1) {\n\n      doc.history = concatenateHistory(arr)\n\n    } else {\n\n      doc.history = history;\n\n    }\n\n    const historyArray = Object.keys(doc.history)\n      .map(k => ({ key: k, date: new Date(k), confirmed: doc.history[k]}))\n      .sort((a, b) => a.date.getTime() - b.date.getTime());\n\n    doc.historyArray = historyArray;\n    docs.push(doc);\n  });\n\n  return docs;\n}\n\nfunction concatenateHistory(values) {\n  const aggregated = {}\n  values.forEach(v => {\n    const history = v.history;\n    Object.keys(history).forEach((k, i) => {\n      if(typeof aggregated[k] === 'undefined') {\n        aggregated[k] = history[k];\n      } else {\n        aggregated[k] += history[k]\n      }\n    })\n  });\n\n  return aggregated;\n}\n\nexport default {\n  prepData\n}\n","import * as d3 from 'd3';\nimport { THRESHOLD } from './App';\n\nconst dispatcher = d3.dispatch('datapointClick')\nconst format = d3.timeFormat('%d %b');\n\nconst xDomain = [ new Date('2020-01-22'), new Date('2020-03-18')]\n\nlet selected = '';\n\nlet data, caseType;\nlet svgSelection, screen;\nlet main, xScale, yScale, yDomain, lineGen, xAxisSel, yAxisSel;\nlet circleMarkers, paths, interactivePaths, label;\n\nconst t = d3.transition().duration(1000).ease(d3.easeBack)\n\nd3.selection.prototype.moveToFront = function() {\n  return this.each(function() { this.parentNode.appendChild(this); });\n};\n\nconst ticks = {\n  confirmed: [ 5, 50, 500, 5000, 50000 ],\n  deaths: [ 5, 50, 500, 3000 ],\n  recovered: [ 5, 50, 500, 5000, 50000 ],\n\n}\nconst style = {\n  fontFamily: 'Playfair Display',\n  strokeColor: '#FFC042',\n  strokeWidth: 1,\n  strokeColorSelected: 'white',\n  strokeWidthSelected: 5,\n  strokeWidthHover: 2,\n  strokeColorHover: 'white',\n  textColor: 'white',\n  tickTextColor: '#aaa',\n  tickLineColor: '#aaa',\n  lineStrokeStyle: \"1, 1\",\n  tickLineStyle: '0.5, 5',\n  tickTextSize: '1.0rem',\n  strokeWidthInteractive: 4,\n  markerSize: 2,\n  selectedMarkerSize: 6,\n  circleStrokeWidth: 0,\n}\n\nfunction init(svg, _data, _caseType) {\n  data = _data;\n  caseType = _caseType;\n\n  svgSelection = d3.select(svg);\n  const w = svgSelection.attr('width');\n  const h = svgSelection.attr('height');\n\n  const margin = {\n    top: 50,\n    bottom: 50,\n    left: 30,\n    right: w < THRESHOLD ? 30: 150,\n  }\n\n  screen = {\n    w, h,\n    width: w - margin.left - margin.right,\n    height: h - margin.top - margin.bottom,\n    margin\n  }\n\n  main = svgSelection.append('g')\n    .attr('class', 'main')\n    .attr('transform', `translate(20, 0)`);\n\n  xAxisSel = main.append('g')\n    .attr('class', 'x-axis')\n\n  yAxisSel = main.append('g')\n    .attr('class', 'y-axis');\n\n  makeScales();\n  makeAxes()\n  makeCircleMarkers();\n  makePaths()\n  makeInteractionPaths();\n  makeLabel();\n}\n\nfunction makeScales() {\n  xScale = d3.scaleTime()\n    .range([screen.margin.left, screen.width])\n    .domain(xDomain);\n\n  const confirmed = data.docs.map(d => d.confirmed);\n\n  yDomain = d3.extent(confirmed);\n\n  yScale = d3.scaleSymlog()\n    .range([screen.height + screen.margin.top, screen.margin.top])\n    .domain(yDomain)\n\n  lineGen = d3.line()\n    .curve(d3.curveMonotoneX)\n    .x(d => xScale(new Date(d.date)))\n    .y(d => yScale(+d.confirmed))\n}\n\nfunction getXTicks() {\n  const [ _, ...rest] = xScale.ticks();\n  rest.pop();\n  return screen.w < THRESHOLD ? xDomain : [...rest, ...xDomain];\n}\n\nfunction getXAxis() {\n  const xAxis = d3.axisBottom(xScale)\n    .tickPadding(8)\n    .tickValues(getXTicks())\n    .tickFormat(format)\n  return xAxis;\n}\n\nfunction getYAxis(){\n  return d3.axisRight(yScale)\n    .tickValues(ticks[caseType])\n}\n\nfunction makeAxes() {\n\n  xAxisSel\n    .attr('transform', `translate(0, ${screen.height + screen.margin.top})`)\n    .call(getXAxis());\n\n  xAxisSel.selectAll('.tick')\n    .select('text')\n    .attr('fill', style.tickTextColor)\n    .style('font-size', style.tickTextSize)\n    .style('font-family', style.fontFamily);\n\n  xAxisSel.selectAll('.tick')\n    .select('line')\n    .attr('stroke', style.tickLineColor);\n\n  if(screen.w >= THRESHOLD) {\n\n    yAxisSel\n      .attr('transform', `translate(${screen.width}, 0)`)\n      .transition(t)\n      .call(getYAxis())\n\n    yAxisSel.selectAll('.tick')\n      .select('text')\n      .attr('fill', style.tickTextColor)\n      .style('font-size', style.tickTextSize)\n      .attr('dy', 2)\n      .style('font-family', style.fontFamily);\n\n    yAxisSel.selectAll('.tick')\n      .select('line')\n      .attr('x1', 0)\n      .attr('x2', -screen.width + screen.margin.left)\n      .attr('stroke-dasharray', style.tickLineStyle)\n      .attr('stroke', style.tickLineColor);\n  }\n\n  d3.selectAll('.domain').remove();\n\n}\n\nfunction makeCircleMarkers() {\n\n  circleMarkers = main\n  .selectAll('circle')\n  .data(data.countryDocs, d => d.country_code)\n  .enter()\n  .append('circle')\n    .attr('class', d => `${d.country_code}` )\n    .attr('cx', d => xScale(d.historyArray[d.historyArray.length-1].date))\n    .attr('cy', d => yScale(d.historyArray[d.historyArray.length-1].confirmed))\n    .attr('r', style.markerSize)\n    .attr('fill', d => getPathColor(d))\n    .attr('stroke', style.strokeColor)\n    .attr('stroke-width', style.circleStrokeWidth)\n    .style('pointer-events', 'none')\n}\n\nfunction getPathColor(d, isDeselected) {\n  if(!isDeselected && selected === d.country) {\n    return style.strokeColorSelected;\n  }\n  const latest = d.historyArray[d.historyArray.length-1].confirmed;\n\n  const s = yScale(latest)/yScale(yDomain[0]);\n  let h = 0;\n  let l = 0.5\n  if(caseType === 'deaths') {\n    h = 300;\n    l = 0.3;\n  }\n  if(caseType === 'recovered') {\n    h = 120;\n    l = 0.3\n  }\n  const col = d3.hsl(h, 0.4 + s * 0.3 , l);\n  return col;\n\n}\n\nfunction makePaths() {\n  paths = main\n  .selectAll('path')\n  .data(data.countryDocs, d => d.country_code)\n  .enter()\n  .append('path')\n    .attr('class', d => d.country_code )\n    .attr('d', d => lineGen(d.historyArray))\n    .attr('fill', 'none')\n    .attr('stroke', d => getPathColor(d))\n    .style(\"stroke-linecap\", \"round\")\n    .attr('stroke-width', style.strokeWidth)\n    .style('pointer-events', 'none')\n}\n\nfunction makeInteractionPaths() {\n  const g = main.append('g').attr('class', 'interactive')\n\n  interactivePaths = g.selectAll('path')\n  .data(data.countryDocs, d => d.country_code)\n  .enter()\n  .append('path')\n    .attr('class', d => d.country_code + '_')\n    .attr('d', d => lineGen(d.historyArray))\n    .attr('fill', 'none')\n    .attr('stroke', 'transparent')\n    .attr('stroke-width', style.strokeWidthInteractive)\n    .on('mouseover', (d, i, n) => {\n      const lastValue = d.historyArray[d.historyArray.length-1].confirmed;\n\n      if(selected !== d.country) {\n        d3.selectAll(`path.${d.country_code}`)\n          .attr('stroke', style.strokeColorHover)\n          .attr('stroke-width', style.strokeWidthHover)\n          .moveToFront()\n        d3.select(`circle.${d.country_code}`)\n          // .attr('stroke', style.strokeColorHover)\n          .attr('fill', style.strokeColorHover)\n          // .attr('stroke-width', style.strokeWidthHover)\n          .moveToFront()\n      }\n\n\n      label\n        .attr('display', null)\n        .attr('y', yScale(lastValue) - 6)\n        .text(`${d.country}, ${lastValue}`)\n        .moveToFront()\n\n\n\n    })\n    .on('mouseout', (d, i, n) => {\n      if(selected !== d.country) {\n        const strokeColor = getPathColor(d);\n        d3.select(`path.${d.country_code}`)\n          .attr('stroke', strokeColor)\n          .attr('stroke-width', style.strokeWidth)\n\n        d3.select(`circle.${d.country_code}`)\n          // .attr('stroke', strokeColor)\n          // .attr('stroke-width', style.strokeWidth)\n          .attr('fill', strokeColor)\n\n\n        label.attr('display', 'none')\n      }\n      const sel = data.countryDocs.find((d) => d.country === selected )\n      sel && d3.select(`.${sel.country_code}`).moveToFront()\n\n      label.moveToFront()\n    })\n    .on('mouseup', (d, i, n) => {\n\n      handleCountrySelect(d.country_code);\n\n      dispatcher.call('datapointClick', null, d.country);\n    });\n}\n\nfunction makeLabel() {\n  label = main.append('g')\n    .append('text')\n    .attr('class', 'label')\n    .style('font-family', style.fontFamily)\n    .attr('display', 'none')\n    .attr('text-anchor', screen.w < THRESHOLD ? 'end' : 'start')\n    .attr('font-size', '16px')\n    .attr('x', screen.w < THRESHOLD ? screen.width - 8 : screen.width + 8)\n    .attr('fill', style.textColor)\n    .style('z-index', 100)\n}\n\nfunction handleCountrySelect(selectedCountry) {\n  const prev = data.countryDocs.find((d) => d.country === selected )\n  const next = data.countryDocs.find((d) => d.country === selectedCountry )\n\n  if(prev) {\n    const color = getPathColor(prev, true);\n    d3.select(`path.${prev.country_code}`)\n    .attr('stroke', color)\n    .attr('filter', null)\n    .attr('stroke-width', style.strokeWidth)\n    d3.select(`circle.${prev.country_code}`)\n      .attr('r', style.markerSize)\n      // .attr('stroke', color)\n      // .attr('stroke-width', style.strokeWidth)\n      .attr('fill', color )\n      .attr('filter', null)\n  }\n\n  if(next) {\n    const lastValue = next.historyArray[next.historyArray.length-1].confirmed\n    d3.select(`path.${next.country_code}`)\n    .attr('stroke', style.strokeColorSelected)\n    .attr('stroke-width', style.strokeWidthSelected)\n\n    d3.select(`circle.${next.country_code}`)\n      .attr('r', style.selectedMarkerSize)\n      .attr('fill', style.strokeColorSelected)\n      // .attr('stroke', style.strokeColorSelected)\n\n    d3.selectAll(`.${next.country_code}`)\n      .attr('filter', 'url(#white-glow)')\n      .moveToFront();\n\n    label\n      .attr('display', null)\n      .attr('y', yScale(lastValue) - 6)\n      .text(`${next.country}, ${lastValue}`).moveToFront()\n  }\n\n  selected = selectedCountry;\n}\n\nfunction handleCaseType(_caseType, _data) {\n  caseType = _caseType;\n  data = _data;\n\n  label.attr('display', 'none')\n  // makeScales();\n  // makeAxes();\n  updatePaths();\n  updateInteractivePaths();\n  updateCircleMarkers();\n\n}\n\nfunction updatePaths() {\n  paths.data(data.countryDocs, d => d.country_code)\n  paths.exit().remove();\n  const enterSelection = paths.enter()\n  paths.merge(enterSelection)\n    .transition(t)\n    .attr('stroke', d => getPathColor(d))\n    .attr('d', d => lineGen(d.historyArray))\n}\n\nfunction updateInteractivePaths() {\n  interactivePaths.data(data.countryDocs, d => d.country_code)\n\n  interactivePaths.exit().remove();\n\n  const enterSelection = interactivePaths.enter()\n\n  interactivePaths.merge(enterSelection)\n    .attr('d', d => lineGen(d.historyArray))\n}\n\nfunction updateCircleMarkers() {\n  circleMarkers.data(data.countryDocs, d => d.country_code)\n\n  circleMarkers.exit().remove()\n  const circleEnterSelection = circleMarkers.enter();\n  circleMarkers.merge(circleEnterSelection)\n    .attr('class', d => d.country_code )\n    .transition(t)\n    .attr('fill', d => getPathColor(d))\n    .attr('cx', d => xScale(d.historyArray[d.historyArray.length-1].date))\n    .attr('cy', d => yScale(d.historyArray[d.historyArray.length-1].confirmed))\n}\nconst vis = {\n  init,\n  handleCountrySelect,\n  handleCaseType,\n  style,\n  dispatcher\n}\n\nObject.defineProperty(vis, 'screen', {\n  get: function() {\n    return screen;\n  }\n});\n\nexport default vis;\n\n","import React, { useEffect, useRef, useReducer, useCallback } from 'react';\nimport './App.css';\nimport Utils from './utils';\nimport vis from './vis';\n\nexport const THRESHOLD = 1200;\n\nfunction Radio ({ type, value, onChange, isChecked }) {\n  return (\n    <div style={{ color: 'white', marginRight: '8px' }}>\n      <input\n        type=\"radio\"\n        id={value}\n        name={type}\n        value={value}\n        checked={isChecked}\n        onChange={e => onChange(e.target.value)}\n      />\n      <label\n        className={'display'}\n        style={{ marginLeft: '4px', color: isChecked ? vis.style.strokeColor: 'white' }}\n        htmlFor={value}>{value}</label>\n    </div>\n  )\n}\n\nfunction DatasetSelection({ onChange, selected })  {\n  return (\n    <div style={{ display: 'flex' }}>\n      <Radio type=\"caseType\" value=\"confirmed\" isChecked={selected === 'confirmed'} onChange={onChange}/>\n      <Radio type=\"caseType\" value=\"deaths\" isChecked={selected === 'deaths'} onChange={onChange}/>\n      <Radio type=\"caseType\" value=\"recovered\" isChecked={selected === 'recovered'} onChange={onChange} />\n    </div>\n  )\n}\n\nconst defaultState = { countries: [], selectedCountry: '', caseType: 'confirmed' }\n\nfunction reducer(state, action) {\n  switch(action.type) {\n    case 'countries': return { ...state, countries: action.value };\n    case 'selectedCountry' : {\n      return { ...state, selectedCountry: action.value};\n    }\n    case 'caseType': {\n      return { ...state, caseType: action.value }\n    }\n    default: return state;\n  }\n}\n\nfunction App() {\n  const svgRef = useRef(null);\n  const [ state, dispatch ] = useReducer(reducer, defaultState);\n  const setState = (type, value) => dispatch({ type, value });\n\n  useEffect(useCallback(() => {\n    let data = Utils.prepData(state.caseType);\n    vis.init(svgRef.current, data, state.caseType);\n    setState('countries', data.countries)\n    vis.dispatcher.on('datapointClick', (country) => {\n      setState('selectedCountry', country)\n    });\n  }, [state.caseType]), []);\n\n  useEffect(() => {\n    function onResize() {\n      window.location.reload()\n    }\n\n    window.addEventListener('resize', onResize)\n    return () => {\n      window.removeEventListener(onResize)\n    }\n  }, []);\n\n  const updateData = useCallback(() => {\n    let data = Utils.prepData(state.caseType);\n    vis.handleCaseType(state.caseType, data);\n\n  }, [state.caseType])\n\n  useEffect(updateData, [state.caseType]);\n\n  useEffect(() => {\n    state.selectedCountry && vis.handleCountrySelect(state.selectedCountry)\n  }, [ state.selectedCountry ]);\n\n  const w = window.innerWidth;\n  if(w < THRESHOLD) {\n    document.body.style.overflowY = 'auto';\n  }\n  return (\n    <div  style= {{\n       display: 'flex',\n      justifyContent: 'center',\n\n    }}>\n      <div style={{\n        position: 'relative',\n        maxWidth: 1400,\n\n      }}>\n      <div style={{\n        position: w < THRESHOLD ? 'relative' : 'absolute',\n        left: w < THRESHOLD ? null : '170px',\n        top: w < THRESHOLD ? null : '240px',\n        margin: w < THRESHOLD ? '10px': null,\n      }}>\n        <h1 className={'display'} style={{\n          fontWeight: 900,\n          color: 'white',\n          margin: 0,\n          fontSize: '48px'\n        }}>Flattening the curve.</h1>\n        <h3 className={'display'} style={{\n          fontWeight: 700,\n          margin: '10px 0px',\n          color: vis.style.strokeColor\n        }}>Coronavirus cases per country over time.</h3>\n        <DatasetSelection selected={state.caseType} onChange={v => setState('caseType', v)}/>\n        <h3 className={'display'} style={{\n          fontWeight: 700,\n          fontSize: '12px',\n          margin: '10px 0px',\n          color: vis.style.strokeColor\n        }}>Select below or hover over a line to see details.</h3>\n      <select\n        style={{ color: w < THRESHOLD ? 'white': 'black', width: '200px', margin: '5px 0px'}}\n        value={state.selectedCountry} onChange={e => {\n          setState('selectedCountry', e.target.value)\n        }}>\n        <option key={-1} value={''}>Select Country</option>\n        {state.countries.map(c => (<option value={c} key={c}>{c}</option>))}\n      </select>\n      <div style={{display: 'flex'}}>\n        <p className={'display'} style={{ zIndex: 999, margin: '5px 5px 0px 0px', color: vis.style.strokeColor, fontSize: '12px' }}>\n        <a style={{\n            color: '#aaa',\n          }} noreferer='true' noopener='true' target='blank' href='https://github.com/Omaroid/Covid-19-API'>data source</a>\n\n          </p>\n        <p className={'display'} style={{ zIndex: 999,  margin: '5px 0px 0px 5px', color: vis.style.strokeColor, fontSize: '12px' }}>\n          <a style={{\n            color: '#aaa',\n          }} noreferer='true' noopener='true' target='blank' href='https://twitter.com/stopyransky'>author</a>\n\n        </p>\n      </div>\n      </div>\n      <svg\n        ref={svgRef}\n        width={Math.min(THRESHOLD, window.innerWidth)}\n        height={window.innerHeight - 10}>\n        <filter id=\"white-glow\" x=\"-5000%\" y=\"-5000%\" width=\"10000%\" height=\"10000%\">\n          <feFlood result=\"flood\" floodColor=\"#ffffff\" floodOpacity=\"1\"></feFlood>\n          <feComposite in=\"flood\" result=\"mask\" in2=\"SourceGraphic\" operator=\"in\"></feComposite>\n          <feMorphology in=\"mask\" result=\"dilated\" operator=\"dilate\" radius=\"1.0\"></feMorphology>\n          <feGaussianBlur in=\"dilated\" result=\"blurred\" stdDeviation=\"5\"></feGaussianBlur>\n          <feMerge>\n              <feMergeNode in=\"blurred\"></feMergeNode>\n              <feMergeNode in=\"SourceGraphic\"></feMergeNode>\n          </feMerge>\n        </filter>\n      </svg>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
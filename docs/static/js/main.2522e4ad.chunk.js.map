{"version":3,"sources":["i18n.js","locale/en.js","locale/pl.js","utils.js","vis.js","App.js","serviceWorker.js","index.js","fallback/data/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv","fallback/data/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv","data/wdvp.data.csv"],"names":["i18n","use","detector","initReactI18next","init","resources","en","translation","pl","keySeparator","interpolation","escapeValue","caseTypes","getWDVPData","d3","wdvpSrc","caseType","a","raw","getJsonData","byCountryMap","group","d","country","countryDocs","mergeHistoryByCountry","globalHistory","reduce","acc","curr","historyArray","forEach","h","existing","find","key","confirmed","confirmedChange","deaths","deathsChange","push","date","Date","countries","Array","from","Set","map","sort","b","includes","jsonData","locations","filter","country_code","getValue","countryName","length","value","history","docs","arr","values","histories","recovered","Object","keys","k","i","getTime","item","index","items","prepData","prototype","moveToFront","this","each","parentNode","appendChild","data","screen","svgSel","mainSel","xAxisSel","yAxisSel","circleMarkers","paths","interactivePaths","label","histogramSel","xScale","yScale","xDomain","yDomain","lineGen","dispatcher","format","t","duration","ease","ticks","style","fontFamily","strokeColor","strokeWidth","strokeColorSelected","strokeWidthSelected","strokeWidthHover","strokeColorHover","textColor","tickTextColor","tickLineColor","lineStrokeStyle","tickLineStyle","tickTextSize","strokeWidthInteractive","markerSize","selectedMarkerSize","circleStrokeWidth","selected","getPathColor","isDeselected","latest","s","l","handleCountrySelect","selectedCountry","prev","next","color","attr","lastValue","text","makeHistogram","hDomain","hScale","domain","range","hAxis","tickValues","axis","w","THRESHOLD","width","call","select","remove","selectAll","dataSel","enter","append","merge","transition","vis","svg","_data","_caseType","console","log","margin","top","bottom","left","right","height","sampleHistory","endDate","c","curve","x","y","makeScales","tickPadding","rest","pop","getXTicks","tickFormat","getXAxis","makeAxes","g","on","n","sel","makeInteractionPaths","handleCaseType","exit","enterSelection","updatePaths","updateInteractivePaths","circleEnterSelection","updateCircleMarkers","defineProperty","get","Radio","type","onChange","isChecked","isMobile","window","innerWidth","marginRight","display","justifyContent","id","name","checked","e","target","className","marginLeft","fontSize","htmlFor","DatasetSelection","useTranslation","LinkItem","url","zIndex","padding","textDecoration","noreferer","noopener","href","defaultState","reducer","state","action","App","svgRef","useRef","useReducer","dispatch","setState","useEffect","useCallback","Utils","then","current","resizeTimer","handleResize","clearTimeout","setTimeout","location","reload","addEventListener","removeEventListener","Settings","alignItems","cursor","language","onClick","changeLanguage","document","body","overflowY","position","transform","flexFlow","fontWeight","v","ref","Math","min","innerHeight","result","floodColor","floodOpacity","in","in2","operator","radius","stdDeviation","marginBottom","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.2522e4ad.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\n// all language files loaded on page load? no no.\nimport en from './locale/en';\nimport pl from './locale/pl';\n\ni18n\n  .use(detector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources: { en, pl, },\n    // lng: \"en\",\n    // fallbackLng: 'en',\n    keySeparator: false, // we do not use keys in form messages.welcome\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\nexport default i18n;\n","\nexport default {\n  translation: {\n    \"Coronavirus cases per country over time.\": \"Coronavirus cases per country over time.\",\n    \"Select below or hover over a line to see details.\": \"Select below or hover over a line to see details.\",\n    \"Select Country\": \"Select Country\",\n    \"data source\": \"data source\",\n    \"author\": \"author\",\n    \"Flattening the curve.\": \"Fighting the virus.\",\n    \"confirmed\": \"confirmed\",\n    \"deaths\": \"deaths\",\n    \"recovered\": \"recovered\",\n  }\n}\n","\nexport default {\n  translation: {\n    \"Coronavirus cases per country over time.\": \"Liczba zachorowań na koronawirusa\",\n    \"Select below or hover over a line to see details.\": \"Wybierz kraj z listy lub wskaz linie aby zobaczyć więcej.\",\n    \"Select Country\": \"Wybierz kraj\",\n    \"data source\": \"dane\",\n    \"author\": \"autor\",\n    \"Flattening the curve.\": \"Walka z wirusem.\",\n    \"confirmed\": \"potwierdzone\",\n    \"deaths\": \"śmiertelne\",\n    \"recovered\": \"wyleczone\",\n  }\n}\n","import * as confirmedSrc from './fallback/data/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv';\nimport * as deathsSrc from './fallback/data/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv';\nimport * as wdvpSrc from './data/wdvp.data.csv';\nimport * as d3 from 'd3';\n\nimport { group, rollup } from 'd3-array';\n\nimport * as jsonData from './data/data.all.json';\n\nconst caseTypes = [ 'confirmed', 'deaths' ];\n\nfunction getWDVPData() {\n  return d3.dsv(';', wdvpSrc)\n}\n\nasync function prepData(caseType) {\n  let wdvp = await getWDVPData();\n  let raw;\n  let byCountryMap;\n  let countryDocs;\n  let countries;\n  let globalHistory;\n\n  raw = getJsonData(caseType);\n  byCountryMap = group(raw, d => d.country);\n  countryDocs = mergeHistoryByCountry(byCountryMap);\n\n  globalHistory = countryDocs.reduce((acc, curr) => {\n    const history = curr.historyArray;\n\n    history.forEach(h => {\n      const existing = acc.find(d => d.key === h.key);\n      if(existing) {\n        existing.confirmed += h.confirmed;\n        existing.confirmedChange += h.confirmedChange;\n        existing.deaths += h.deaths;\n        existing.deathsChange += h.deathsChange;\n      } else {\n        acc.push({ ...h})\n      }\n    });\n\n    return acc;\n  }, [ { key: '1/21/20', date: new Date('1/21/20'), confirmed: 0, confirmedChange: 0, deaths: 0, deathsChange: 0 }]);\n\n  countries = Array.from(new Set(countryDocs.map(d => d.country)))\n    .sort((a, b) => {\n      if(a > b) return 1;\n      if(a < b) return -1;\n      return 0\n    });\n\n  return {\n    countryDocs,\n    countries,\n    globalHistory,\n  }\n\n}\n\nfunction getJsonData(caseType) {\n  if(caseTypes.includes(caseType)){\n\n    return jsonData.default[caseType].locations.filter(d => d.country_code !== 'XX');\n  }\n  return jsonData.default['confirmed'].locations.filter(d => d.country_code !== 'XX');\n}\n\nfunction getCSVData(caseType) {\n\n  switch(caseType) {\n    case 'deaths': return d3.dsv(',', deathsSrc)\n    default: return d3.dsv(',', confirmedSrc)\n\n  }\n\n}\n\nfunction getValue(caseType, countryName, date) {\n  const d = getJsonData(caseType).filter(d => d.country === countryName)\n  if(d && d.length > 0) {\n    if(date) {\n      const value = d[0].history[date];\n      if(value) {\n        return value\n      }\n      return null;\n    } else {\n      return d[0].history;\n    }\n\n  }\n  return null;\n}\n\nfunction getCountryData(countryName, key) {\n  return {\n    confirmed: getValue('confirmed', countryName, key),\n    recovered: getValue('recovered', countryName, key),\n    deaths: getValue('deaths', countryName, key),\n  }\n}\n\nfunction mergeHistoryByCountry(map) {\n  const docs = [];\n\n  map.forEach(arr => {\n\n    const { country, country_code } = arr[0];\n\n    const historyArray = concatenateHistory(arr)\n      .sort((a, b) => a.date.getTime() - b.date.getTime())\n      .map((item, index, items) => ({\n        ...item,\n        confirmedChange: index ? item.confirmed - items[index - 1].confirmed : 0,\n        deathsChange: index ? item.deaths - items[index - 1].deaths : 0,\n      }));\n\n    docs.push({ country, country_code, historyArray });\n  });\n\n  return docs;\n}\n\nfunction concatenateHistory(values) {\n\n  const aggregated = values.reduce((acc, curr) => {\n    const history = curr.history;\n    const histories = getCountryData(curr.country);\n\n    Object.keys(history).forEach((k, i) => {\n      const existing = acc.find(d => d.key === k);\n      if(existing) {\n        existing.confirmed += history[k];\n      } else {\n        acc.push({\n          key: k,\n          date: new Date(k),\n          confirmed: history[k],\n          deaths: histories.deaths[k]\n        });\n      }\n    });\n    return acc;\n  }, []);\n\n  return aggregated;\n}\n\nexport default {\n  prepData\n}\n","import * as d3 from 'd3';\nimport { THRESHOLD } from './App';\n\nd3.selection.prototype.moveToFront = function() {\n  return this.each(function() { this.parentNode.appendChild(this); });\n};\n\nconst dispatcher = d3.dispatch('datapointClick')\n\nconst format = d3.timeFormat('%d %b');\nconst t = d3.transition().duration(1000).ease(d3.easeBack)\n\nconst ticks = {\n  confirmed: [ 5, 50, 500, 5000, 50000 ],\n  deaths: [ 5, 50, 500, 5000 ],\n  recovered: [ 5, 50, 500, 5000, 50000 ],\n\n}\n\nconst style = {\n  fontFamily: 'Playfair Display',\n  strokeColor: '#FFC042',\n  strokeWidth: 1,\n  strokeColorSelected: 'white',\n  strokeWidthSelected: 5,\n  strokeWidthHover: 2,\n  strokeColorHover: 'white',\n  textColor: 'white',\n  tickTextColor: '#aaa',\n  tickLineColor: '#aaa',\n  lineStrokeStyle: \"1, 1\",\n  tickLineStyle: '0.5, 5',\n  tickTextSize: '1.0rem',\n  strokeWidthInteractive: 4,\n  markerSize: 2,\n  selectedMarkerSize: 6,\n  circleStrokeWidth: 0,\n}\n\nlet selected = '';\nlet data, screen, caseType;\nlet svgSel, mainSel, xAxisSel, yAxisSel, circleMarkers, paths, interactivePaths, label, areaSel, histogramSel;\nlet xScale, yScale, xDomain, yDomain, lineGen;\n\nfunction init(svg, _data, _caseType) {\n  data = _data;\n  caseType = _caseType;\n  console.log(data);\n  svgSel = d3.select(svg);\n\n  const w = svgSel.attr('width');\n  const h = svgSel.attr('height');\n\n  const margin = {\n    top: 50,\n    bottom: 200,\n    left: 30,\n    right: w < THRESHOLD ? 30: 200,\n  }\n\n  screen = {\n    w, h,\n    width: w - margin.left - margin.right,\n    height: h - margin.top - margin.bottom,\n    margin\n  }\n\n  const sampleHistory = data.countryDocs[0].historyArray;\n  const endDate = sampleHistory && sampleHistory.length ? sampleHistory[sampleHistory.length-1].date : new Date();\n\n  xDomain = [ new Date('2020-01-22'), endDate]\n\n  mainSel = svgSel.append('g')\n    .attr('class', 'main')\n    .attr('transform', `translate(${screen.margin.left}, ${screen.margin.top})`);\n\n  xAxisSel = mainSel.append('g')\n    .attr('class', 'x-axis')\n    .attr('transform', `translate(0, ${screen.height + 150})`)\n\n  yAxisSel = mainSel.append('g')\n    .attr('class', 'y-axis')\n    .attr('transform', `translate(${screen.width}, 0)`);\n\n  makeScales();\n  makeAxes()\n  makeCircleMarkers();\n  makePaths()\n  makeInteractionPaths();\n  makeLabel();\n\n  histogramSel = mainSel.append('g')\n    .attr('class', 'histogram')\n    .attr('transform', `translate(${0}, ${screen.height})`)\n\n  histogramSel.append('g').attr('class', 'histogram-axis');\n\n  mainSel.append('line')\n    .attr('x1', 0)\n    .attr('x2', screen.width)\n    .attr('y1', screen.height + 10)\n    .attr('y2', screen.height + 10)\n    .attr('stroke', style.tickLineColor)\n\n  histogramSel.append('text')\n  .attr('class', 'histogram-caption')\n  .attr('fill', style.strokeColor)\n  .attr('x', 70)\n  .attr('text-anchor', 'start')\n  .attr('y', 32)\n  .style('font-size', '1rem')\n  .style('font-family', style.fontFamily)\n  .text('Daily change')\n\n  histogramSel.append('text')\n  .attr('class', 'histogram-label')\n  .attr('fill', style.tickTextColor)\n  .attr('x', 180)\n  .attr('text-anchor', 'start')\n  .attr('y', 32)\n  .style('font-size', '1rem')\n  .style('font-family', style.fontFamily)\n  .text('Global')\n\n  mainSel.append('line')\n    .attr('x1', 0)\n    .attr('x2', screen.width)\n    .attr('y1', screen.height + 150)\n    .attr('y2', screen.height + 150)\n    .attr('stroke', style.tickLineColor)\n\n  makeHistogram({ country: 'Global', country_code: 'XXX', historyArray: data.globalHistory})\n\n  dispatcher.on('datapointClick', (d) => {\n    handleCountrySelect(d.country_code);\n  });\n\n}\n\nfunction makeScales() {\n  xScale = d3.scaleTime()\n    .range([0, screen.width])\n    .domain(xDomain);\n\n  const confirmed = data.countryDocs.reduce((a, c) => {\n    const values = c.historyArray.map(h => h.confirmed)\n    return [...a, ...values];\n  }, [])\n  yDomain = d3.extent(confirmed);\n\n  yScale = d3.scaleSymlog()\n    .range([screen.height, 0])\n    .domain(yDomain)\n\n  lineGen = d3.line()\n    .curve(d3.curveMonotoneX)\n    .x(d => xScale(new Date(d.date)))\n    .y(d => yScale(+d.confirmed))\n}\n\nfunction getXTicks() {\n  const [ _, ...rest] = xScale.ticks();\n  rest.pop();\n  return screen.w < THRESHOLD ? xDomain : [...rest, ...xDomain];\n}\n\nfunction getXAxis() {\n  const xAxis = d3.axisBottom(xScale)\n    .tickPadding(8)\n    .tickValues(getXTicks())\n    .tickFormat(format)\n  return xAxis;\n}\n\nfunction getYAxis(){\n  return d3.axisRight(yScale)\n    // .tickPadding(6)\n    .tickValues(ticks[caseType])\n}\n\nfunction makeAxes() {\n\n  xAxisSel.call(getXAxis());\n\n  xAxisSel.selectAll('.tick')\n    .select('text')\n    .attr('fill', style.tickTextColor)\n    .style('font-size', style.tickTextSize)\n    .style('font-family', style.fontFamily);\n\n  xAxisSel.selectAll('.tick')\n    .select('line')\n    .attr('stroke-dasharray', style.tickLineStyle)\n    .attr('stroke', style.tickLineColor)\n    .attr('y1', 0)\n    .attr('y2', -screen.height-screen.margin.bottom + screen.margin.top)\n\n  if(screen.w >= THRESHOLD) {\n\n    yAxisSel\n      // .transition(t)\n      .call(getYAxis())\n\n    yAxisSel.selectAll('.tick')\n      .select('text')\n      .attr('fill', style.tickTextColor)\n      .attr('dy', 2)\n      .style('font-size', style.tickTextSize)\n      .style('font-family', style.fontFamily);\n\n    yAxisSel.selectAll('.tick')\n      .select('line')\n      .attr('stroke-dasharray', style.tickLineStyle)\n      .attr('stroke', style.tickLineColor)\n      .attr('x1', -screen.width)\n      .attr('x2', 0)\n  }\n\n  d3.selectAll('.domain').remove();\n\n}\n\nfunction makeCircleMarkers() {\n\n  circleMarkers = mainSel\n  .selectAll('circle')\n  .data(data.countryDocs, d => d.country_code)\n  .enter()\n  .append('circle')\n    .attr('class', d => `${d.country_code}` )\n    .attr('cx', d => xScale(d.historyArray[d.historyArray.length-1].date))\n    .attr('cy', d => yScale(d.historyArray[d.historyArray.length-1].confirmed))\n    .attr('r', style.markerSize)\n    .attr('fill', d => getPathColor(d))\n    .attr('stroke', style.strokeColor)\n    .attr('stroke-width', style.circleStrokeWidth)\n    .style('pointer-events', 'none')\n}\n\nfunction getPathColor(d, isDeselected) {\n  if(!isDeselected && selected === d.country) {\n    return style.strokeColorSelected;\n  }\n  const latest = d.historyArray[d.historyArray.length-1].confirmed;\n\n  const s = yScale(latest)/yScale(yDomain[0]);\n  let h = 0;\n  let l = 0.5\n  if(caseType === 'deaths') {\n    h = 300;\n    l = 0.3;\n  }\n  if(caseType === 'recovered') {\n    h = 120;\n    l = 0.3\n  }\n  const col = d3.hsl(h, 0.4 + s * 0.3 , l);\n  return col;\n\n}\n\nfunction makePaths() {\n  paths = mainSel\n  .selectAll('path')\n  .data(data.countryDocs, d => d.country_code)\n  .enter()\n  .append('path')\n  .attr('class', d => d.country_code )\n  .attr('d', d => lineGen(d.historyArray))\n  .attr('stroke', d => getPathColor(d))\n  .attr('stroke-width', style.strokeWidth)\n  .attr('fill', 'none')\n  .style(\"stroke-linecap\", \"round\")\n  .style('pointer-events', 'none')\n}\n\nfunction makeInteractionPaths() {\n  const g = mainSel.append('g').attr('class', 'interactive')\n\n  interactivePaths = g.selectAll('path')\n  .data(data.countryDocs, d => d.country_code)\n  .enter()\n  .append('path')\n    .attr('class', d => d.country_code + '_')\n    .attr('d', d => lineGen(d.historyArray))\n    .attr('fill', 'none')\n    .attr('stroke', 'transparent')\n    .attr('stroke-width', style.strokeWidthInteractive)\n    .on('mouseover', (d, i, n) => {\n      const lastValue = d.historyArray[d.historyArray.length-1].confirmed;\n\n      if(selected !== d.country) {\n        d3.selectAll(`path.${d.country_code}`)\n          .attr('stroke', style.strokeColorHover)\n          .attr('stroke-width', style.strokeWidthHover)\n          .moveToFront()\n        d3.select(`circle.${d.country_code}`)\n          // .attr('stroke', style.strokeColorHover)\n          .attr('fill', style.strokeColorHover)\n          // .attr('stroke-width', style.strokeWidthHover)\n          .moveToFront()\n      }\n\n\n      label\n        .attr('display', null)\n        .attr('y', yScale(lastValue) - 6)\n        .text(`${d.country}, ${lastValue}`)\n        .moveToFront()\n    })\n    .on('mouseout', (d, i, n) => {\n      if(selected !== d.country) {\n        const strokeColor = getPathColor(d);\n        d3.select(`path.${d.country_code}`)\n          .attr('stroke', strokeColor)\n          .attr('stroke-width', style.strokeWidth)\n\n        d3.select(`circle.${d.country_code}`)\n          // .attr('stroke', strokeColor)\n          // .attr('stroke-width', style.strokeWidth)\n          .attr('fill', strokeColor)\n        // label.moveToFront()\n        label.attr('display', 'none')\n      }\n      const sel = data.countryDocs.find((d) => d.country === selected )\n      sel && d3.select(`.${sel.country_code}`).moveToFront()\n\n      label.moveToFront()\n    })\n    .on('mouseup', (d, i, n) => {\n      dispatcher.call('datapointClick', null, d);\n    });\n}\n\nfunction makeLabel() {\n  label = mainSel.append('g')\n    .append('text')\n    .attr('class', 'label')\n    .style('font-family', style.fontFamily)\n    .attr('display', 'none')\n    .attr('text-anchor', screen.w < THRESHOLD ? 'end' : 'start')\n    .attr('font-size', '16px')\n    .attr('x', screen.w < THRESHOLD ? screen.width - 8 : screen.width + 8)\n    .attr('fill', style.textColor)\n    .style('z-index', 100)\n}\n\nfunction handleCountrySelect(selectedCountry) {\n  const prev = data.countryDocs.find((d) => d.country === selected )\n  const next = data.countryDocs.find((d) => d.country === selectedCountry )\n\n  if(prev) {\n    const color = getPathColor(prev, true);\n    d3.select(`path.${prev.country_code}`)\n    .attr('stroke', color)\n    .attr('filter', null)\n    .attr('stroke-width', style.strokeWidth)\n    d3.select(`circle.${prev.country_code}`)\n      .attr('r', style.markerSize)\n      .attr('fill', color )\n      .attr('filter', null)\n  }\n\n  if(next) {\n    const lastValue = next.historyArray[next.historyArray.length-1].confirmed\n    d3.select(`path.${next.country_code}`)\n    .attr('stroke', style.strokeColorSelected)\n    .attr('stroke-width', style.strokeWidthSelected)\n\n    d3.select(`circle.${next.country_code}`)\n      .attr('r', style.selectedMarkerSize)\n      .attr('fill', style.strokeColorSelected)\n\n    d3.selectAll(`.${next.country_code}`)\n      .attr('filter', 'url(#white-glow)')\n      .moveToFront();\n\n    label\n      .attr('display', null)\n      .attr('y', yScale(lastValue) - 6)\n      .text(`${next.country}, ${lastValue}`).moveToFront();\n\n\n    makeHistogram(next)\n  }\n\n  selected = selectedCountry;\n}\n\nfunction makeHistogram(next) {\n\n  const hDomain = d3.extent(next.historyArray.map(d => d[`${caseType}Change`]));\n\n  const hScale = d3.scaleLinear().domain(hDomain).range([150, 20]);\n  const [first, ...ticks] = hScale.ticks(4);\n\n    const hAxis = d3.axisRight(hScale).tickValues(ticks);\n    const axis = d3.select('.histogram-axis')\n      .attr('transform', screen.w >= THRESHOLD ? `translate(${screen.width}, 0)`: null)\n      .call(hAxis)\n\n    axis.select('.domain')\n      .remove();\n\n    axis.selectAll('.tick')\n      .select('text')\n      .attr('fill', style.tickTextColor)\n      .style('font-size', style.tickTextSize)\n      .style('font-family', style.fontFamily);\n\n  d3.select('.histogram-label').text(`${next.country}, ${next.historyArray[next.historyArray.length - 1][`${caseType}Change`]}`)\n  const dataSel = histogramSel.selectAll('line')\n    .data(next.historyArray, d => d.key);\n\n  const enterSelection = dataSel.enter()\n    .append('line')\n    .attr('class', 'hist-line')\n    .attr('stroke-width', 2)\n    .attr('fill', 'white')\n    .attr('stroke', 'white')\n\n  enterSelection.merge(dataSel)\n    .transition().duration(500).ease(d3.easeCircle)\n    .attr('x1', d => xScale(d.date))\n    .attr('y1', hScale(0))\n    .attr('x2', d => xScale(d.date))\n    .attr('y2', d => hScale(d[`${caseType}Change`]))\n\n}\n\nfunction handleCaseType(_caseType, _data) {\n  caseType = _caseType;\n  data = _data;\n\n  label.attr('display', 'none')\n\n  updatePaths();\n  updateInteractivePaths();\n  updateCircleMarkers();\n\n  if(selected) {\n    const item = data.countryDocs.find(d => d.country === selected)\n    makeHistogram(item)\n  }\n}\n\nfunction updatePaths() {\n  paths.data(data.countryDocs, d => d.country_code)\n  paths.exit().remove();\n  const enterSelection = paths.enter()\n  paths.merge(enterSelection)\n    .transition(t)\n    .attr('stroke', d => getPathColor(d))\n    .attr('d', d => lineGen(d.historyArray))\n}\n\nfunction updateInteractivePaths() {\n  interactivePaths.data(data.countryDocs, d => d.country_code)\n\n  interactivePaths.exit().remove();\n\n  const enterSelection = interactivePaths.enter()\n\n  interactivePaths.merge(enterSelection)\n    .attr('d', d => lineGen(d.historyArray))\n}\n\nfunction updateCircleMarkers() {\n  circleMarkers.data(data.countryDocs, d => d.country_code)\n\n  circleMarkers.exit().remove()\n  const circleEnterSelection = circleMarkers.enter();\n  circleMarkers.merge(circleEnterSelection)\n    .attr('class', d => d.country_code )\n    .transition(t)\n    .attr('fill', d => getPathColor(d))\n    .attr('cx', d => xScale(d.historyArray[d.historyArray.length-1].date))\n    .attr('cy', d => yScale(d.historyArray[d.historyArray.length-1].confirmed))\n}\n\nconst vis = {\n  init,\n  handleCountrySelect,\n  handleCaseType,\n  style,\n  dispatcher\n}\n\nObject.defineProperty(vis, 'screen', {\n  get: function() {\n    return screen;\n  }\n});\n\nexport default vis;\n\n","import React, { useEffect, useRef, useReducer, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport 'i18next-browser-languagedetector';\n\nimport './App.css';\nimport Utils from './utils';\n\nimport vis from './vis';\n\nexport const THRESHOLD = 1200;\nconst IS_FALLBACK = false;\n\n\nfunction Radio ({ type, value, label, onChange, isChecked }) {\n  const isMobile = window.innerWidth < THRESHOLD;\n  return (\n    <div style={{ color: 'white', marginRight: '8px', display: 'flex', justifyContent: 'center' }}>\n      <input\n        type=\"radio\"\n        id={value}\n        name={type}\n        value={value}\n        checked={isChecked}\n        onChange={e => onChange(e.target.value)}\n      />\n      <label\n        className={'display'}\n        style={{\n          marginLeft: isMobile ? '2px' :  '4px',\n          color: isChecked ? vis.style.strokeColor: 'white',\n          fontSize: isMobile ? '0.8rem' : '1rem'\n        }}\n        htmlFor={value}>{label}</label>\n    </div>\n  );\n}\n\nfunction DatasetSelection({ onChange, selected })  {\n  const [ t ] = useTranslation();\n  return (\n    <div style={{ display: 'flex' }}>\n      <Radio\n        type=\"caseType\"\n        value=\"confirmed\"\n        label={t('confirmed')}\n        isChecked={selected === 'confirmed'}\n        onChange={onChange}\n      />\n      <Radio\n        type=\"caseType\"\n        value=\"deaths\"\n        label={t('deaths')}\n        isChecked={selected === 'deaths'}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nfunction LinkItem({url, name}) {\n\n  return (\n    <span className={'display'} style={{ zIndex: 999, padding: '0px 5px ', color: vis.style.strokeColor, fontSize: '12px' }}>\n      <a style={{ color: '#aaa', textDecoration: 'none' }} noreferer='true' noopener='true' target='blank' href={url}>{name}</a>\n    </span>\n  )\n}\nconst defaultState = { countries: [], selectedCountry: '', caseType: 'confirmed' }\n\nfunction reducer(state, action) {\n  switch(action.type) {\n    case 'countries': {\n      return { ...state, countries: action.value };\n    }\n    case 'selectedCountry' : {\n      return { ...state, selectedCountry: action.value};\n    }\n    case 'caseType': {\n      return { ...state, caseType: action.value }\n    }\n    default: return state;\n  }\n}\n\nfunction App() {\n  const svgRef = useRef(null);\n  const [ t, i18n ] = useTranslation();\n  const [ state, dispatch ] = useReducer(reducer, defaultState);\n  const setState = (type, value) => dispatch({ type, value });\n\n  useEffect(useCallback(() => {\n    Utils.prepData(state.caseType, IS_FALLBACK).then(data => {\n\n      vis.init(svgRef.current, data, state.caseType);\n      setState('countries', data.countries);\n\n      vis.dispatcher.on('datapointClick', (d) => {\n        setState('selectedCountry', d.country)\n      });\n    })\n\n\n    return () => {\n      vis.dispatcher.on('datapointClick', null);\n    }\n\n  }, [state.caseType]), []);\n\n  useEffect(() => {\n\n    let resizeTimer;\n    const handleResize = () => {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(function() {\n        // TODO\n        window.location.reload();\n      }, 300);\n    };\n\n    window.addEventListener('resize', handleResize)\n    return () => {\n      window.removeEventListener(handleResize)\n    }\n  }, []);\n\n  useEffect(useCallback(() => {\n    Utils.prepData(state.caseType, IS_FALLBACK).then(data => {\n      vis.handleCaseType(state.caseType, data);\n    });\n\n  }, [state.caseType]), [state.caseType]);\n\n  useEffect(() => {\n    state.selectedCountry && vis.handleCountrySelect(state.selectedCountry)\n  }, [ state.selectedCountry ]);\n\n  const w = window.innerWidth;\n\n  if(w < THRESHOLD) {\n    document.body.style.overflowY = 'auto';\n  }\n\n  function CountrySelection() {\n    return (\n      <div style={{ display: 'flex', flexFlow: 'column nowrap', justifyContent: 'center'}}>\n        <h3 className={'display'} style={{\n            fontWeight: 700,\n            fontSize: '12px',\n            margin: '10px 0px',\n            color: vis.style.strokeColor\n          }}>{t('Select below or hover over a line to see details.')}\n        </h3>\n          <select className={'select'}\n            style={{ color: w < THRESHOLD ? 'white': 'black', width: '200px', margin: '5px 0px'}}\n            value={state.selectedCountry} onChange={e => {\n              setState('selectedCountry', e.target.value)\n            }}>\n            {!state.selectedCountry && <option value={''} key={-1} >{t('Select Country')}</option>}\n            {state.countries.map(c => (<option value={c} key={c}>{c}</option>))}\n        </select>\n      </div>\n    )\n  }\n\n  function Title() {\n    return (\n      <h1 className={'display'} style={{\n          fontWeight: 900,\n          color: 'white',\n          margin: 0,\n          fontSize: w < THRESHOLD ? '1.5rem' : '3rem',\n        }}>{t('Flattening the curve.')}\n      </h1>\n    )\n  }\n\n  function Subtitle() {\n    return (\n      <h3 className={'display'} style={{\n          fontWeight: 700,\n          margin: '10px 0px',\n          color: vis.style.strokeColor,\n          fontSize: w < THRESHOLD ? '1rem' : '2rem',\n        }}>{t('Coronavirus cases per country over time.')}\n      </h3>\n    )\n  }\n\n  function Settings() {\n    return (\n      <div className={'display'} style={{display: 'flex', alignItems: 'center'}}>\n        <div style={{ color: '#aaa', fontSize: '12px' }}>\n          <span style={{\n            padding: '0px 5px ',\n            cursor: 'pointer',\n            textDecoration: i18n.language === 'pl' ? 'underline' : null }}\n            onClick={() => i18n.changeLanguage('pl')}>PL</span>\n          <span style={{ padding: '0px 2px '}}>/</span>\n          <span style={{\n            padding: '0px 5px ',\n            cursor: 'pointer',\n            textDecoration: i18n.language === 'en' ? 'underline' : null}}\n            onClick={() => i18n.changeLanguage('en')}>EN\n          </span>\n        </div>\n        <LinkItem key={0} url={'https://github.com/Omaroid/Covid-19-API'} name={t('data source')} />\n        <LinkItem key={1} url={'https://twitter.com/stopyransky'} name={t('author')} />\n      </div>\n    )\n  }\n\n  return (\n    <div  style= {{\n        display: 'flex',\n        justifyContent: 'center',\n    }}>\n      <div style={{ position: 'relative', }}>\n      <div style={{\n        position: w < THRESHOLD ? 'relative' : 'absolute',\n        transform: w < THRESHOLD ? 'translate(-50%, 50px)' : null,\n        left: w < THRESHOLD ? '50%' : '100px',\n        top: w < THRESHOLD ? '0%' : '200px',\n        width: w < THRESHOLD ? '100%': null,\n        display: 'flex',\n        flexFlow: 'column nowrap',\n        alignItems: w < THRESHOLD ? 'center' : null,\n      }}>\n        <Title />\n        <Subtitle />\n        <DatasetSelection selected={state.caseType} onChange={v => setState('caseType', v)}/>\n        <CountrySelection />\n        {w >= THRESHOLD && <Settings />}\n      </div>\n      <svg\n        ref={svgRef}\n        width={Math.min(THRESHOLD, window.innerWidth)}\n        height={window.innerHeight}>\n        <filter id=\"white-glow\" x=\"-5000%\" y=\"-5000%\" width=\"10000%\" height=\"10000%\">\n          <feFlood result=\"flood\" floodColor=\"#ffffff\" floodOpacity=\"1\"></feFlood>\n          <feComposite in=\"flood\" result=\"mask\" in2=\"SourceGraphic\" operator=\"in\"></feComposite>\n          <feMorphology in=\"mask\" result=\"dilated\" operator=\"dilate\" radius=\"1.0\"></feMorphology>\n          <feGaussianBlur in=\"dilated\" result=\"blurred\" stdDeviation=\"5\"></feGaussianBlur>\n          <feMerge>\n              <feMergeNode in=\"blurred\"></feMergeNode>\n              <feMergeNode in=\"SourceGraphic\"></feMergeNode>\n          </feMerge>\n        </filter>\n      </svg>\n      {w < THRESHOLD &&\n        <div style={{display: 'flex', justifyContent: 'center', marginBottom: '10px' }}>\n          <Settings />\n        </div>\n      }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/time_series_covid19_confirmed_global.1b2d26f6.csv\";","module.exports = __webpack_public_path__ + \"static/media/time_series_covid19_deaths_global.f5812d39.csv\";","module.exports = __webpack_public_path__ + \"static/media/wdvp.data.ddc446b0.csv\";"],"sourceRoot":""}